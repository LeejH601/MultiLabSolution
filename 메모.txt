합의(Consensus)

동기화 연산 : decide
─ 선언
•Ttype_t decide(Type_t value)
─ 동작
• n 개의 스레드가 decide를 호출한다.
• 각각의 스레드는 한번 이하로만 호출한다. - 크게 신경 쓸 필요 없는 조건임.
• Decide는 모든 호출에 대해 같은 값을 반환한다.
• Decide가 반환하는 값은 전달된 value중 하나이다. - 여러 쓰레드에서 이 함수가 호출될 때 반환값은 거기서 사용된 value 들 중에 있어야 함	
• Atomic하고 Wait-Free로 동작한다.

⚫ 의미
─ 모든 쓰레드가 같은 결론을 얻는 방법
─ decide()가 모든 쓰레드가 wait-free로 같은
결론을 얻는다.
─ 여러 경쟁 쓰레드들 중 하나를 선택하고, 누가
선택되었는지 모든 쓰레드가 알게 한다.
• 높은 확률로 제일 처음 decide()를 호출한 쓰레드가
선택됨



합의 수(Consensus number)

⚫ 정의
─ 동기화 연산을 제공하는 클래스 C가 있을 때
─ 클래스 C와 atomic 메모리를 여러 개 사용해서 n개의
스레드에 대한 합의 객체를 구현 할 수 있다 => 클래스
C가 n-스레드 합의 문제를 해결한다(solve)고 한다.
─ 클래스 C의 합의 수(consensus number)
• C를 이용해서 해결 가능한 n-스레드 합의 문제 중 최대의 n을
말한다. 만약 최대 n이 존재하지 않는다면, 그 클래스의 합의
수를 무한하다(infinite)고 한다.
─ 동기화 객체 C가 얼마나 파워풀 한가를 계측
• 0, 1 : 있으나 마나
• 2 : 2개 쓰레드 해결 가능, 3개쓰레드 해결 불가능
• 무한대 : 가장 파워풀한 객체


